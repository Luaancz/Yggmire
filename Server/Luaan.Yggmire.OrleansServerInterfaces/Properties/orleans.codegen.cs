//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Luaan.Yggmire.OrleansServerInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Luaan.Yggmire.OrleansInterfaces.Account;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class AccountGrainFactory
    {
        

                        public static IAccountGrain GetGrain(long primaryKey, string keyExt)
                        {
                            return Cast(GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(IAccountGrain), 2048450655, primaryKey, keyExt));
                        }

                        public static IAccountGrain GetGrain(long primaryKey, string keyExt, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(IAccountGrain), 2048450655, primaryKey, keyExt, grainClassNamePrefix));
                        }

                        public static IAccountGrain GetGrain(Guid primaryKey, string keyExt)
                        {
                            return Cast(GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(IAccountGrain), 2048450655, primaryKey, keyExt));
                        }

                        public static IAccountGrain GetGrain(Guid primaryKey, string keyExt, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeKeyExtendedGrainReferenceInternal(typeof(IAccountGrain), 2048450655, primaryKey, keyExt,grainClassNamePrefix));
                        }

            public static IAccountGrain Cast(IAddressable grainRef)
            {
                
                return AccountGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Luaan.Yggmire.OrleansServerInterfaces.IAccountGrain")]
        internal class AccountGrainReference : Orleans.GrainReference, IAccountGrain, Orleans.IAddressable
        {
            

            public static IAccountGrain Cast(IAddressable grainRef)
            {
                
                return (IAccountGrain) GrainReference.CastInternal(typeof(IAccountGrain), (GrainReference gr) => { return new AccountGrainReference(gr);}, grainRef, 2048450655);
            }

                protected override int InterfaceId { get { return 2048450655; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Luaan.Yggmire.OrleansServerInterfaces.IAccountGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return AccountGrainMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal AccountGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                AccountGrainReference input = ((AccountGrainReference)(original));
                return ((AccountGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                AccountGrainReference input = ((AccountGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return AccountGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public System.Threading.Tasks.Task CaptureSession(Luaan.Yggmire.OrleansInterfaces.ISessionGrain session)
            {

                return base.InvokeMethodAsync<object>(1590561359, new object[] {session is GrainBase ? Luaan.Yggmire.OrleansInterfaces.SessionGrainFactory.Cast(session.AsReference()) : session}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation> GetState()
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation>(-454132849, new object[] {}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Create(string password)
            {

                return base.InvokeMethodAsync<object>(-1446207851, new object[] {password}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<bool> ValidatePassword(string password)
            {

                return base.InvokeMethodAsync<System.Boolean>(1379941908, new object[] {password}, TimeSpan.Zero );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Luaan.Yggmire.OrleansServerInterfaces.IAccountGrain", 2048450655)]
    internal class AccountGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 2048450655;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2048450655:  // IAccountGrain
                        switch (methodId)
                        {
                            case 1590561359: 
                                await ((IAccountGrain)grain).CaptureSession((Luaan.Yggmire.OrleansInterfaces.ISessionGrain)arguments[0]);
                              return true;
                            case -454132849: 
                                return await ((IAccountGrain)grain).GetState();
                            case -1446207851: 
                                await ((IAccountGrain)grain).Create((String)arguments[0]);
                              return true;
                            case 1379941908: 
                                return await ((IAccountGrain)grain).ValidatePassword((String)arguments[0]);
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2048450655:  // IAccountGrain
                    switch (methodId)
                    {
                        case 1590561359:
                            return "CaptureSession";
                    case -454132849:
                            return "GetState";
                    case -1446207851:
                            return "Create";
                    case 1379941908:
                            return "ValidatePassword";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class AccountGrainProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        public static IPlayerGrain GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), 1141825993, primaryKey));
                        }

                        public static IPlayerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), 1141825993, primaryKey, grainClassNamePrefix));
                        }

                        public static IPlayerGrain GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), 1141825993, primaryKey));
                        }

                        public static IPlayerGrain GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), 1141825993, primaryKey, grainClassNamePrefix));
                        }

            public static IPlayerGrain Cast(IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Luaan.Yggmire.OrleansServerInterfaces.IPlayerGrain")]
        internal class PlayerGrainReference : Orleans.GrainReference, IPlayerGrain, Orleans.IAddressable
        {
            

            public static IPlayerGrain Cast(IAddressable grainRef)
            {
                
                return (IPlayerGrain) GrainReference.CastInternal(typeof(IPlayerGrain), (GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, 1141825993);
            }

                protected override int InterfaceId { get { return 1141825993; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Luaan.Yggmire.OrleansServerInterfaces.IPlayerGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal PlayerGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Luaan.Yggmire.OrleansServerInterfaces.IPlayerGrain", 1141825993)]
    internal class PlayerGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 1141825993;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1141825993:  // IPlayerGrain
                        switch (methodId)
                        {
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1141825993:  // IPlayerGrain
                    switch (methodId)
                    {
                        case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luaan.Yggmire.OrleansServerInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Luaan.Yggmire.OrleansInterfaces.Account;
    using System.Collections;
    using System.Runtime.InteropServices;
    
    
    [Orleans.RegisterSerializerAttribute()]
    internal class Luaan_Yggmire_OrleansInterfaces_Account_AccountInformationSerialization
    {
        
        static Luaan_Yggmire_OrleansInterfaces_Account_AccountInformationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation input = ((Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation)(original));
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation result = new Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Name = input.Name;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation input = ((Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation result = new Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation();
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
