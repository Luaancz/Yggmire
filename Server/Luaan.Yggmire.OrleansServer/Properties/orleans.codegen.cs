//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Luaan.Yggmire.OrleansServer.Account
{
    using System;
    using System.Collections.Generic;
    using System.Collections;
    using System.Runtime.Serialization;
    using Luaan.Yggmire.OrleansInterfaces.Account;
    using Orleans.CodeGeneration;
    using Orleans;
    using System.Runtime.InteropServices;
    using Luaan.Yggmire.OrleansServerInterfaces.Account;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Luaan.Yggmire.OrleansServer.Account.Luaan.Yggmire.OrleansServer.Account.AccountGr" +
        "ain")]
    public class AccountGrainState : global::Orleans.CodeGeneration.GrainState, IAccountGrainState
    {
        

            public Guid Id { get; set; }

            public String Name { get; set; }

            public String Password { get; set; }

            public String Email { get; set; }

            public DateTimeOffset CreatedOn { get; set; }

            public DateTimeOffset LastLogin { get; set; }

            public List<CharacterInformation> Characters { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Id", out value)) Id = (Guid) value;
                if (values.TryGetValue("Name", out value)) Name = (String) value;
                if (values.TryGetValue("Password", out value)) Password = (String) value;
                if (values.TryGetValue("Email", out value)) Email = (String) value;
                if (values.TryGetValue("CreatedOn", out value)) CreatedOn = (DateTimeOffset) value;
                if (values.TryGetValue("LastLogin", out value)) LastLogin = (DateTimeOffset) value;
                if (values.TryGetValue("Characters", out value)) Characters = (List<CharacterInformation>) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("AccountGrainState( Id={0} Name={1} Password={2} Email={3} CreatedOn={4} LastLogin={5} Characters={6} )", Id, Name, Password, Email, CreatedOn, LastLogin, Characters);
            }
        
        public AccountGrainState() : 
                base("Luaan.Yggmire.OrleansServer.Account.AccountGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Id"] = this.Id;
            result["Name"] = this.Name;
            result["Password"] = this.Password;
            result["Email"] = this.Email;
            result["CreatedOn"] = this.CreatedOn;
            result["LastLogin"] = this.LastLogin;
            result["Characters"] = this.Characters;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Id = default(Guid);
            this.Name = default(String);
            this.Password = default(String);
            this.Email = default(String);
            this.CreatedOn = default(DateTimeOffset);
            this.LastLogin = default(DateTimeOffset);
            this.Characters = new List<CharacterInformation>();
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            AccountGrainState input = ((AccountGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            AccountGrainState input = ((AccountGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            AccountGrainState result = new AccountGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Luaan.Yggmire.OrleansServer.Account.Luaan.Yggmire.OrleansServer.Account.Character" +
        "Grain")]
    public class CharacterGrainState : global::Orleans.CodeGeneration.GrainState, ICharacterGrainState
    {
        

            public String AccountId { get; set; }

            public String Name { get; set; }

            public String ZoneId { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("AccountId", out value)) AccountId = (String) value;
                if (values.TryGetValue("Name", out value)) Name = (String) value;
                if (values.TryGetValue("ZoneId", out value)) ZoneId = (String) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("CharacterGrainState( AccountId={0} Name={1} ZoneId={2} )", AccountId, Name, ZoneId);
            }
        
        public CharacterGrainState() : 
                base("Luaan.Yggmire.OrleansServer.Account.CharacterGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["AccountId"] = this.AccountId;
            result["Name"] = this.Name;
            result["ZoneId"] = this.ZoneId;
            return result;
        }
        
        private void InitStateFields()
        {
            this.AccountId = default(String);
            this.Name = default(String);
            this.ZoneId = default(String);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            CharacterGrainState input = ((CharacterGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            CharacterGrainState input = ((CharacterGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            CharacterGrainState result = new CharacterGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
}
namespace Luaan.Yggmire.OrleansServer.Actors
{
    using System;
    using System.Collections.Generic;
    using System.Collections;
    using Luaan.Yggmire.Core.Structures;
    using Orleans.CodeGeneration;
    using Orleans;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Luaan.Yggmire.OrleansServer.Actors.Luaan.Yggmire.OrleansServer.Actors.ZoneGrain")]
    public class ZoneGrainState : global::Orleans.CodeGeneration.GrainState, IZoneState
    {
        

            public String Id { get; set; }

            public List<WorldItem> Items { get; set; }

            public ZonePosition Position { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("Id", out value)) Id = (String) value;
                if (values.TryGetValue("Items", out value)) Items = (List<WorldItem>) value;
                if (values.TryGetValue("Position", out value)) Position = (ZonePosition) value;
            }

            public override System.String ToString()
            {
                return System.String.Format("ZoneGrainState( Id={0} Items={1} Position={2} )", Id, Items, Position);
            }
        
        public ZoneGrainState() : 
                base("Luaan.Yggmire.OrleansServer.Actors.ZoneGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["Id"] = this.Id;
            result["Items"] = this.Items;
            result["Position"] = this.Position;
            return result;
        }
        
        private void InitStateFields()
        {
            this.Id = default(String);
            this.Items = new List<WorldItem>();
            this.Position = default(ZonePosition);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            ZoneGrainState input = ((ZoneGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            ZoneGrainState input = ((ZoneGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            ZoneGrainState result = new ZoneGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
}
namespace Luaan.Yggmire.OrleansServer.Chat
{
    using Orleans.CodeGeneration;
    using Orleans;
    using System;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
}
namespace Luaan.Yggmire.OrleansServer.Monitoring
{
    using System;
    using Orleans.CodeGeneration;
    using Orleans;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.1053.48452")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [SerializableAttribute()]
    [global::Orleans.CodeGeneration.GrainStateAttribute("Luaan.Yggmire.OrleansServer.Monitoring.Luaan.Yggmire.OrleansServer.Monitoring.Mon" +
        "itoringGrain")]
    public class MonitoringGrainState : global::Orleans.CodeGeneration.GrainState, IMonitoringStatus
    {
        

            public Int32 PlayerCount { get; set; }

            public override void SetAll(System.Collections.Generic.IDictionary<string,object> values)
            {   
                object value;
                if (values == null) { InitStateFields(); return; }
                if (values.TryGetValue("PlayerCount", out value)) PlayerCount = value is Int64 ? (Int32)(Int64)value : (Int32)value;
            }

            public override System.String ToString()
            {
                return System.String.Format("MonitoringGrainState( PlayerCount={0} )", PlayerCount);
            }
        
        public MonitoringGrainState() : 
                base("Luaan.Yggmire.OrleansServer.Monitoring.MonitoringGrain")
        {
            this.InitStateFields();
        }
        
        public override System.Collections.Generic.IDictionary<string, object> AsDictionary()
        {
            System.Collections.Generic.Dictionary<string, object> result = new System.Collections.Generic.Dictionary<string, object>();
            result["PlayerCount"] = this.PlayerCount;
            return result;
        }
        
        private void InitStateFields()
        {
            this.PlayerCount = default(Int32);
        }
        
        [global::Orleans.CodeGeneration.CopierMethodAttribute()]
        public static object _Copier(object original)
        {
            MonitoringGrainState input = ((MonitoringGrainState)(original));
            return input.DeepCopy();
        }
        
        [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
        public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            MonitoringGrainState input = ((MonitoringGrainState)(original));
            input.SerializeTo(stream);
        }
        
        [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
        public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            MonitoringGrainState result = new MonitoringGrainState();
            result.DeserializeFrom(stream);
            return result;
        }
    }
}
namespace Luaan.Yggmire.OrleansServer
{
    using Orleans.CodeGeneration;
    using Orleans;
    using System;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
