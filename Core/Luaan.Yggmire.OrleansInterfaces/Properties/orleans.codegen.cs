//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Luaan.Yggmire.OrleansInterfaces.Chat
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ChatObserverFactory
    {
        

            public static IChatObserver Cast(IAddressable grainRef)
            {
                
                return ChatObserverReference.Cast(grainRef);
            }

        private static IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IChatObserver> CreateObjectReference(IChatObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new ChatObserverMethodInvoker();
            return ChatObserverFactory.Cast(await GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static void DeleteObjectReference(IChatObserver reference)
        {
            GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver")]
        internal class ChatObserverReference : Orleans.GrainReference, IChatObserver, Orleans.IAddressable
        {
            

            public static IChatObserver Cast(IAddressable grainRef)
            {
                
                return (IChatObserver) GrainReference.CastInternal(typeof(IChatObserver), (GrainReference gr) => { return new ChatObserverReference(gr);}, grainRef, 1633131735);
            }

                protected override int InterfaceId { get { return 1633131735; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return ChatObserverMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal ChatObserverReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ChatObserverReference input = ((ChatObserverReference)(original));
                return ((ChatObserverReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ChatObserverReference input = ((ChatObserverReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ChatObserverReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public void UpdateChat(string name, string message)
            {

                base.InvokeOneWayMethod(167103139, new object[] {name, message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver", 1633131735)]
    internal class ChatObserverMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 1633131735;
            }
        }
        
        public async System.Threading.Tasks.Task<System.Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1633131735:  // IChatObserver
                        switch (methodId)
                        {
                            case 167103139: 
                                ((IChatObserver)grain).UpdateChat((System.String)arguments[0], (System.String)arguments[1]); return true;
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1633131735:  // IChatObserver
                    switch (methodId)
                    {
                        case 167103139:
                            return "UpdateChat";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ChatObserverProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luaan.Yggmire.OrleansInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using System.Collections;
    using Luaan.Yggmire.OrleansInterfaces.Account;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SessionGrainFactory
    {
        

                        public static ISessionGrain GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISessionGrain), -705986448, primaryKey));
                        }

                        public static ISessionGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISessionGrain), -705986448, primaryKey, grainClassNamePrefix));
                        }

                        public static ISessionGrain GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISessionGrain), -705986448, primaryKey));
                        }

                        public static ISessionGrain GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISessionGrain), -705986448, primaryKey, grainClassNamePrefix));
                        }

            public static ISessionGrain Cast(IAddressable grainRef)
            {
                
                return SessionGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Luaan.Yggmire.OrleansInterfaces.ISessionGrain")]
        internal class SessionGrainReference : Orleans.GrainReference, ISessionGrain, Orleans.IAddressable
        {
            

            public static ISessionGrain Cast(IAddressable grainRef)
            {
                
                return (ISessionGrain) GrainReference.CastInternal(typeof(ISessionGrain), (GrainReference gr) => { return new SessionGrainReference(gr);}, grainRef, -705986448);
            }

                protected override int InterfaceId { get { return -705986448; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Luaan.Yggmire.OrleansInterfaces.ISessionGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return SessionGrainMethodInvoker.GetMethodName(interfaceId, methodId); }

            public async System.Threading.Tasks.Task<SessionGrainProperties> GetProperties() 
            { 
                return await base.InvokeMethodAsync<SessionGrainProperties>( -606142484, new object[]{}, TimeSpan.Zero);
            }
            
            
            protected internal SessionGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            public System.Threading.Tasks.Task<string> CharacterName
            {
                get
                {

                return base.InvokeMethodAsync<System.String>(211902227, new object[] {}, TimeSpan.Zero , options: InvokeMethodOptions.ReadOnly);
                }
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SessionGrainReference input = ((SessionGrainReference)(original));
                return ((SessionGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SessionGrainReference input = ((SessionGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SessionGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation> Authorize(string name, string password)
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation>(1891548347, new object[] {name, password}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation> GetAccount()
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation>(1960002325, new object[] {}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation> CreateAccount(string name, string password)
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation>(2013465976, new object[] {name, password}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation> CreateCharacter()
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation>(757304272, new object[] {}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task<Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation> SelectCharacter(string name)
            {

                return base.InvokeMethodAsync<Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation>(-404060281, new object[] {name}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task RegisterObserver(Luaan.Yggmire.OrleansInterfaces.ISessionObserver observer)
            {
GrainFactoryBase.CheckGrainObserverParamInternal(observer);

                return base.InvokeMethodAsync<object>(1542836865, new object[] {observer is GrainBase ? Luaan.Yggmire.OrleansInterfaces.SessionObserverFactory.Cast(observer.AsReference()) : observer}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Respond(int responseId, string response)
            {

                return base.InvokeMethodAsync<object>(-1099888414, new object[] {responseId, response}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Disconnect()
            {

                return base.InvokeMethodAsync<object>(-1836674149, new object[] {}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task SubscribeForChat(int channel, Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver observer)
            {
GrainFactoryBase.CheckGrainObserverParamInternal(observer);

                return base.InvokeMethodAsync<object>(-950310688, new object[] {channel, observer is GrainBase ? Luaan.Yggmire.OrleansInterfaces.Chat.ChatObserverFactory.Cast(observer.AsReference()) : observer}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task UnsubscribeFromChat(int channel, Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver observer)
            {
GrainFactoryBase.CheckGrainObserverParamInternal(observer);

                return base.InvokeMethodAsync<object>(-1965559293, new object[] {channel, observer is GrainBase ? Luaan.Yggmire.OrleansInterfaces.Chat.ChatObserverFactory.Cast(observer.AsReference()) : observer}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task SendChatMessage(int channel, string message)
            {

                return base.InvokeMethodAsync<object>(-46125154, new object[] {channel, message}, TimeSpan.Zero );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Luaan.Yggmire.OrleansInterfaces.ISessionGrain", -705986448)]
    internal class SessionGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return -705986448;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -705986448:  // ISessionGrain
                        switch (methodId)
                        {
                            case 211902227: 
                                return await ((ISessionGrain)grain).CharacterName;
                            case 1891548347: 
                                return await ((ISessionGrain)grain).Authorize((String)arguments[0], (String)arguments[1]);
                            case 1960002325: 
                                return await ((ISessionGrain)grain).GetAccount();
                            case 2013465976: 
                                return await ((ISessionGrain)grain).CreateAccount((String)arguments[0], (String)arguments[1]);
                            case 757304272: 
                                return await ((ISessionGrain)grain).CreateCharacter();
                            case -404060281: 
                                return await ((ISessionGrain)grain).SelectCharacter((String)arguments[0]);
                            case 1542836865: 
                                await ((ISessionGrain)grain).RegisterObserver((ISessionObserver)arguments[0]);
                              return true;
                            case -1099888414: 
                                await ((ISessionGrain)grain).Respond((Int32)arguments[0], (String)arguments[1]);
                              return true;
                            case -1836674149: 
                                await ((ISessionGrain)grain).Disconnect();
                              return true;
                            case -950310688: 
                                await ((ISessionGrain)grain).SubscribeForChat((Int32)arguments[0], (Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver)arguments[1]);
                              return true;
                            case -1965559293: 
                                await ((ISessionGrain)grain).UnsubscribeFromChat((Int32)arguments[0], (Luaan.Yggmire.OrleansInterfaces.Chat.IChatObserver)arguments[1]);
                              return true;
                            case -46125154: 
                                await ((ISessionGrain)grain).SendChatMessage((Int32)arguments[0], (String)arguments[1]);
                              return true;
                            case -606142484: return ((ISessionGrain)grain).GetProperties();
                                                        default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -705986448:  // ISessionGrain
                    switch (methodId)
                    {
                        case 211902227:
                            return "get_CharacterName";
                    case 1891548347:
                            return "Authorize";
                    case 1960002325:
                            return "GetAccount";
                    case 2013465976:
                            return "CreateAccount";
                    case 757304272:
                            return "CreateCharacter";
                    case -404060281:
                            return "SelectCharacter";
                    case 1542836865:
                            return "RegisterObserver";
                    case -1099888414:
                            return "Respond";
                    case -1836674149:
                            return "Disconnect";
                    case -950310688:
                            return "SubscribeForChat";
                    case -1965559293:
                            return "UnsubscribeFromChat";
                    case -46125154:
                            return "SendChatMessage";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [System.SerializableAttribute()]
    public static class SessionGrainExtensionMethods
    {
        
static public System.Threading.Tasks.Task<SessionGrainProperties> GetProperties(this ISessionGrain interfaceData) 
            { 
                SessionGrainFactory.SessionGrainReference gref = interfaceData as SessionGrainFactory.SessionGrainReference;
                 return gref.GetProperties();
            }
            
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SessionGrainProperties
    {
        

            public String CharacterName { get; set; }
            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                retValue["CharacterName"] = CharacterName;
                return retValue;
            }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SessionObserverFactory
    {
        

            public static ISessionObserver Cast(IAddressable grainRef)
            {
                
                return SessionObserverReference.Cast(grainRef);
            }

        private static IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<ISessionObserver> CreateObjectReference(ISessionObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new SessionObserverMethodInvoker();
            return SessionObserverFactory.Cast(await GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static void DeleteObjectReference(ISessionObserver reference)
        {
            GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("Luaan.Yggmire.OrleansInterfaces.ISessionObserver")]
        internal class SessionObserverReference : Orleans.GrainReference, ISessionObserver, Orleans.IAddressable
        {
            

            public static ISessionObserver Cast(IAddressable grainRef)
            {
                
                return (ISessionObserver) GrainReference.CastInternal(typeof(ISessionObserver), (GrainReference gr) => { return new SessionObserverReference(gr);}, grainRef, 1563631474);
            }

                protected override int InterfaceId { get { return 1563631474; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "Luaan.Yggmire.OrleansInterfaces.ISessionObserver"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return SessionObserverMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal SessionObserverReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SessionObserverReference input = ((SessionObserverReference)(original));
                return ((SessionObserverReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SessionObserverReference input = ((SessionObserverReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SessionObserverReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public void ReadyForChat()
            {

                base.InvokeOneWayMethod(1287266638, new object[] {} );
            }
            
            public void Disconnected()
            {

                base.InvokeOneWayMethod(-15699575, new object[] {} );
            }
            
            public void SystemMessage(string message)
            {

                base.InvokeOneWayMethod(-1808133108, new object[] {message} );
            }
            
            public void ShowDialog(string message)
            {

                base.InvokeOneWayMethod(-377703801, new object[] {message} );
            }
            
            public void ShowInputDialog(int responseId, string message)
            {

                base.InvokeOneWayMethod(-1619562930, new object[] {responseId, message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Luaan.Yggmire.OrleansInterfaces.ISessionObserver", 1563631474)]
    internal class SessionObserverMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 1563631474;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1563631474:  // ISessionObserver
                        switch (methodId)
                        {
                            case 1287266638: 
                                ((ISessionObserver)grain).ReadyForChat(); return true;
                            case -15699575: 
                                ((ISessionObserver)grain).Disconnected(); return true;
                            case -1808133108: 
                                ((ISessionObserver)grain).SystemMessage((String)arguments[0]); return true;
                            case -377703801: 
                                ((ISessionObserver)grain).ShowDialog((String)arguments[0]); return true;
                            case -1619562930: 
                                ((ISessionObserver)grain).ShowInputDialog((Int32)arguments[0], (String)arguments[1]); return true;
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1563631474:  // ISessionObserver
                    switch (methodId)
                    {
                        case 1287266638:
                            return "ReadyForChat";
                    case -15699575:
                            return "Disconnected";
                    case -1808133108:
                            return "SystemMessage";
                    case -377703801:
                            return "ShowDialog";
                    case -1619562930:
                            return "ShowInputDialog";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SessionObserverProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luaan.Yggmire.OrleansInterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Luaan.Yggmire.OrleansInterfaces.Account;
    using System.Collections;
    using System.Runtime.InteropServices;
    
    
    [Orleans.RegisterSerializerAttribute()]
    internal class Luaan_Yggmire_OrleansInterfaces_Account_AccountInformationSerialization
    {
        
        static Luaan_Yggmire_OrleansInterfaces_Account_AccountInformationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation input = ((Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation)(original));
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation result = new Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Characters = ((List<CharacterInformation>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Characters)));
            result.Name = input.Name;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation input = ((Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Characters, stream, typeof(List<CharacterInformation>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation result = new Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation();
            result.Characters = ((List<CharacterInformation>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(List<CharacterInformation>), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(Luaan.Yggmire.OrleansInterfaces.Account.AccountInformation), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class Luaan_Yggmire_OrleansInterfaces_Account_CharacterInformationSerialization
    {
        
        static Luaan_Yggmire_OrleansInterfaces_Account_CharacterInformationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            return original;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation input = ((Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation result = new Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation();
            result.Id = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            result.Name = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            return result;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(Luaan.Yggmire.OrleansInterfaces.Account.CharacterInformation), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
